:where(.circle, .heart, .squiggle) path {
	stroke: var(--text);
}

/* for some reason, stroke-width is double of the expected value when using the code below */
/* .circle path {
	stroke-width: var(--svg-thickness);
} */

.circle {
	width: calc(100% + (2 * var(--btn-padding-inline)));
	height: calc(100% - var(--btn-padding-block));
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
	fill: none;
	stroke-linecap: round;
	stroke-dasharray: var(--offset, 69px) 278px;
	stroke-dashoffset: 361px;
}

:where(.nav a:hover, .nav [aria-current="page"], .nav [data-state="active"])
	.circle {
	--offset: 180px;
}

@media (hover: hover) {
	/* when supported */
	.circle {
		transition-property: stroke-dasharray;
		transition-duration: 0.5s;
		transition-timing-function: linear;
		pointer-events: none;
	}
}

:where(.heart, .squiggle) path {
	stroke-width: var(--svg-thickness);
}

.heart,
.squiggle {
	stroke-dasharray: 400;
	stroke-dashoffset: 400;
	animation-duration: 2.5s;
	animation-fill-mode: forwards;
	animation-name: draw;
	animation-delay: 0.2s;
	animation-timing-function: var(--ease-1);
}

.heart {
	inline-size: var(--step-4);
}

.squiggle {
	display: none;
	inline-size: var(--step-6);
}

@media (min-width: 36em) {
	.squiggle {
		display: block;
	}
}

/* .arrow {
	transform: scaleY(-1);
	position: absolute;
	width: auto;
	height: 75vh;
	z-index: -1;
	bottom: 17.5%;
	right: 17.5%;
	right: 33%;
}

.arrow {
	position: absolute;
	width: 100vw;
	height: auto;
	z-index: -1;
	transform: scaleY(-1);
	--logo-size: min(var(--step-10), calc(100vw - (2 * var(--gutter))));
	bottom: calc(var(--logo-size) / 5.525 + (2 * var(--gutter)));
	right: calc(var(--logo-size) / 4);
	animation-delay: 0s;
}

.arrow path {
	stroke-width: 0.75px;
	stroke-linecap: square;
} */

.arrow {
	display: none;
}
